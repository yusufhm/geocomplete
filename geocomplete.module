<?php
/**
 * @file
 * Geocomplete module.
 */

/**
 *  Implements hook_ctools_plugin_directory().
 */
function geocomplete_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'search_api_location') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 *  Implements hook_form_FORM_ID_alter().
 */
function geocomplete_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  $flag = FALSE;
  $settings = array();
  foreach ($form_state['view']->filter as $filter_obj) {
    if ($filter_obj->options['plugin'] == 'geocomplete') {

      // Filter being used in this exposed form is the plugin we define in our module.
      $flag = TRUE;

      // Add specific class to each geocomplete input.
      $field = $filter_obj->options['expose']['identifier'];
      $form[$field]['#attributes']['class'][] = 'geocomplete-input';

      $hash = drupal_hash_base64($form_id . ' ' . $field);
      $form[$field]['#attributes']['data-geocomplete-hash'] = $hash;

      if (!empty($filter_obj->options['plugin-geocomplete']['html_geolocation'])) {
        $form[$field]['#attributes']['class'][] = 'geocomplete-geolocation';
        $form[$field]['#suffix'] = '<div class="geocomplete-geolocation-msg"></div>';

        $form[$field]['#attached']['js'][] = array(
          'data' => array(
            'geocomplete' => array(
              $hash => array(
                'geolocation' => array(
                  'title' => isset($filter_obj->options['plugin-geocomplete']['html_geolocation_container']['text'])
                      ? $filter_obj->options['plugin-geocomplete']['html_geolocation_container']['text']
                      : t('get my location'),
                  'success' => isset($filter_obj->options['plugin-geocomplete']['html_geolocation_container']['success'])
                      ? $filter_obj->options['plugin-geocomplete']['html_geolocation_container']['success']
                      : t('Your position is [lat], [lng]'),
                  'error' => isset($filter_obj->options['plugin-geocomplete']['html_geolocation_container']['error'])
                      ? $filter_obj->options['plugin-geocomplete']['html_geolocation_container']['error']
                      : t('We could not retrieve your position'),
                ),
              ),
            ),
          ),
          'type' => 'setting',
        );
      }

      // Add hidden fields for storing lat, lon, etc.
      $form[$field . '_geofield'] = array(
        '#type' => 'container',
        $field . '_lat' => array(
          '#type' => 'hidden',
          '#attributes' => array(
            'data-geocomplete-type' => 'lat',
          ),
        ),
        $field . '_lng' => array(
          '#type' => 'hidden',
          '#attributes' => array(
            'data-geocomplete-type' => 'lng',
          ),
        ),
        '#attributes' => array(
          'data-geocomplete-src' => $field,
        ),
      );

      // Additional types to collect.
      $additional_types = array_filter($filter_obj->options['plugin-geocomplete']['additional_types_container']['additional_types']);
      if (!empty($additional_types)) {
        foreach ($additional_types as $type => $type_flag) {
          $form[$field . '_geofield'][$field . '_' . $type] = array(
            '#type' => 'hidden',
            '#attributes' => array(
              'data-geocomplete-type' => $type,
            ),
          );
        }
      }
    }
  }
  if ($flag && empty($form_state['view']->live_preview)) {
    // Geocomplete field is used, add js.
    $form['#attached']['js'][] = array(
      'data' => 'http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places',
      'type' => 'external',
    );
    $form['#attached']['js'][] = array(
      'data' => variable_get('geocomplete_debug', FALSE) // Use minified version by default.
          ? libraries_get_path('geocomplete') . '/jquery.geocomplete.js'
          : libraries_get_path('geocomplete') . '/jquery.geocomplete.min.js',
      'type' => 'file',
    );
    $form['#attached']['js'][] = array(
      'data' => drupal_get_path('module', 'geocomplete') . '/geocomplete.js',
      'type' => 'file',
    );
  }

}
